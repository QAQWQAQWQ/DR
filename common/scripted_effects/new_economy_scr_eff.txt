
build_private_capital = {
    set_variable = { private_worker_wage = 5 }
    set_variable = { private_goods_factory = 0 }
    set_variable = { private_cost = 0 }
    set_variable = { private_capital = industrial_complex_level }
    if = {
        limit = {
            OR = {
                check_variable = { PREV.ind_upd > 3000 }
                check_variable = { PREV.num_of_factories < 1 }
            }
        }
        multiply_variable = { private_capital = 0.5 }
    }
    else = {
    if = {
        limit = {
            OR = {
                check_variable = { PREV.ind_upd > 2000 }
                check_variable = { PREV.num_of_factories < 5 }
            }
        }
        multiply_variable = { private_capital = 1 }
    }
    else = {
    if = {
        limit = {
            OR = {
                check_variable = { PREV.ind_upd > 1000 }
                check_variable = { PREV.num_of_factories < 25 }
            }
        }
        multiply_variable = { private_capital = 2 }
    }
    else = {
    if = {
        limit = {
            OR = {
                check_variable = { PREV.ind_upd > 500 }
                check_variable = { PREV.num_of_factories < 35 }
            }
        }
        multiply_variable = { private_capital = 6 }
    }
    else = {
    if = {
        limit = {
            OR = {
                check_variable = { PREV.ind_upd > 150 }
                check_variable = { PREV.num_of_factories < 35 }
            }
        }
        multiply_variable = { private_capital = 8 }
    }
    else = {
        multiply_variable = { private_capital = 10 }
    }}}}}
    if = {
        limit = {
            OR = {
                owner = AOX
                owner = WWS
                owner = FRW
                owner = ENL
            }
        }
        multiply_variable = { private_capital = 2 }
    }
}

set_custom_slider = {
	set_variable = { slider_dot_x = 311 }
	for_loop_effect = {
		start = 0
		end = 101
		value = val
		add_to_array = { slider_buttons = val }
	}
}
set_custom_slider_1 = {
	set_variable = { slider_dot_x_1 = 311 }
	for_loop_effect = {
		start = 0
		end = 101
		value = val
		add_to_array = { slider_buttons_1 = val }
	}
}

remake_state_cash_tot = {
    if = {
        limit = {
            OR = {
                has_state_category = wasteland
                has_state_category = enclave
                has_state_category = tiny_island
            }
        }
        set_variable = { state_cash_tot = 0.1 }
    }
    if = {
        limit = {
            OR = {
                has_state_category = pastoral
                has_state_category = small_island
            }
        }
        set_variable = { state_cash_tot = 0.2 }
    }
    if = {
        limit = {
            OR = {
                has_state_category = rural
            }
        }
        set_variable = { state_cash_tot = 0.3 }
    }
    if = {
        limit = {
            OR = {
                has_state_category = town
            }
        }
        set_variable = { state_cash_tot = 0.5 }
    }
    if = {
        limit = {
            OR = {
                has_state_category = large_town
            }
        }
        set_variable = { state_cash_tot = 0.6 }
    }
    if = {
        limit = {
            OR = {
                has_state_category = city
            }
        }
        set_variable = { state_cash_tot = 1 }
    }
    if = {
        limit = {
            OR = {
                has_state_category = large_city
            }
        }
        set_variable = { state_cash_tot = 1.5 }
    }
    if = {
        limit = {
            OR = {
                has_state_category = metropolis
            }
        }
        set_variable = { state_cash_tot = 3.75 }
    }
    if = {
        limit = {
            OR = {
                has_state_category = megalopolis
            }
        }
        set_variable = { state_cash_tot = 5 }
    }
	if = {
		limit = {
            AND = {
			    is_on_continent = europe
                NOT = { check_variable = { state_culture = 16 } }
                NOT = { check_variable = { state_culture = 19 } }
                NOT = { check_variable = { state_culture = 20 } }
                NOT = { check_variable = { state_culture = 40 } }
                NOT = { check_variable = { state_culture = 41 } }
                NOT = { check_variable = { state_culture = 42 } }
                NOT = { check_variable = { state_culture = 43 } }
                NOT = { check_variable = { state_culture = 47 } }
                NOT = { check_variable = { state_culture = 48 } }
            }
		}
		multiply_variable = { state_cash_tot = 2 }
	}
    if = {
        limit = {
            OR = {
                is_core_of = AOX
                is_core_of = WWS
                is_core_of = DOF
                is_core_of = DOA
                is_core_of = DOR
                is_core_of = DOB
                is_core_of = DOL
                is_core_of = DOH
            }
        }
		multiply_variable = { state_cash_tot = 1.5 }
    }
    if = {
        limit = {
            OR = {
                check_variable = { state_population_k > 10000 }
            }
        }
		multiply_variable = { state_cash_tot = 2 }
    }
    if = {
        limit = {
            OR = {
                check_variable = { state_population_k > 15000 }
            }
        }
		multiply_variable = { state_cash_tot = 1.5 }
    }
    if = {
        limit = {
            OR = {
                check_variable = { state_population_k > 20000 }
            }
        }
		multiply_variable = { state_cash_tot = 1.5 }
    }
    if = {
        limit = {
            OR = {
                check_variable = { state_population_k > 30000 }
            }
        }
		multiply_variable = { state_cash_tot = 1.5 }
    }
	if = {
		limit = {
            OR = {
                is_core_of = ENL
                is_core_of = FRW
                is_core_of = BHL
                is_core_of = LSB
                NOT = { check_variable = { state_culture = 1 } }
            }
		}
		multiply_variable = { state_cash_tot = 2 }
	}
}
remake_wage_factor = {
    set_variable = { scrfac_wage_fac = 1 }
    if = {
        limit = {
            check_variable = { national_worker_wage = 1 }
        }
        multiply_variable = { scrfac_wage_fac = global.low_wages_factor }
    }
    if = {
        limit = {
            check_variable = { national_worker_wage = 2 }
        }
        multiply_variable = { scrfac_wage_fac = global.low_mid_wages_factor }
    }
    if = {
        limit = {
            check_variable = { national_worker_wage = 3 }
        }
        multiply_variable = { scrfac_wage_fac = global.mid_wages_factor }
    }
    if = {
        limit = {
            check_variable = { national_worker_wage = 4 }
        }
        multiply_variable = { scrfac_wage_fac = global.high_mid_wages_factor }
    }
    if = {
        limit = {
            check_variable = { national_worker_wage = 5 }
        }
        multiply_variable = { scrfac_wage_fac = global.high_wages_factor }
    }
    subtract_from_variable = { scrfac_wage_fac = 1.0 }
}
remake_national_factory_tot_cost = {
    set_variable = { national_factory_tot_cost = 0 }
    set_variable = { mil_cost = global.mil_fac_worker }
    if = {
        limit = {
            check_variable = { national_worker_wage = 1 }
        }
        multiply_variable = { mil_cost = global.low_wages }
    }
    if = {
        limit = {
            check_variable = { national_worker_wage = 2 }
        }
        multiply_variable = { mil_cost = global.low_mid_wages }
    }
    if = {
        limit = {
            check_variable = { national_worker_wage = 3 }
        }
        multiply_variable = { mil_cost = global.mid_wages }
    }
    if = {
        limit = {
            check_variable = { national_worker_wage = 4 }
        }
        multiply_variable = { mil_cost = global.high_mid_wages }
    }
    if = {
        limit = {
            check_variable = { national_worker_wage = 5 }
        }
        multiply_variable = { mil_cost = global.high_wages }
    }
    add_to_variable = { mil_cost = global.mil_fac_raw_cost }
    divide_variable = { mil_cost = global.one_bil }
    multiply_variable = { mil_cost = mil_num }
    add_to_variable = {
        national_factory_tot_cost = mil_cost
    }

    set_variable = { ind_cost = global.ind_fac_worker }
    if = {
        limit = {
            check_variable = { national_worker_wage = 1 }
        }
        multiply_variable = { ind_cost = global.low_wages }
    }
    if = {
        limit = {
            check_variable = { national_worker_wage = 2 }
        }
        multiply_variable = { ind_cost = global.low_mid_wages }
    }
    if = {
        limit = {
            check_variable = { national_worker_wage = 3 }
        }
        multiply_variable = { ind_cost = global.mid_wages }
    }
    if = {
        limit = {
            check_variable = { national_worker_wage = 4 }
        }
        multiply_variable = { ind_cost = global.high_mid_wages }
    }
    if = {
        limit = {
            check_variable = { national_worker_wage = 5 }
        }
        multiply_variable = { ind_cost = global.high_wages }
    }
    add_to_variable = { ind_cost = global.ind_fac_raw_cost }
    divide_variable = { ind_cost = global.one_bil }
    multiply_variable = { ind_cost = ind_num }
    add_to_variable = {
        national_factory_tot_cost = ind_cost
    }
    
    set_variable = { docker_cost = global.docker_fac_worker }
    if = {
        limit = {
            check_variable = { national_worker_wage = 1 }
        }
        multiply_variable = { docker_cost = global.low_wages }
    }
    if = {
        limit = {
            check_variable = { national_worker_wage = 2 }
        }
        multiply_variable = { docker_cost = global.low_mid_wages }
    }
    if = {
        limit = {
            check_variable = { national_worker_wage = 3 }
        }
        multiply_variable = { docker_cost = global.mid_wages }
    }
    if = {
        limit = {
            check_variable = { national_worker_wage = 4 }
        }
        multiply_variable = { docker_cost = global.high_mid_wages }
    }
    if = {
        limit = {
            check_variable = { national_worker_wage = 5 }
        }
        multiply_variable = { docker_cost = global.high_wages }
    }
    add_to_variable = { docker_cost = global.docker_fac_raw_cost }
    divide_variable = { docker_cost = global.one_bil }
    multiply_variable = { docker_cost = docker_num }
    add_to_variable = {
        national_factory_tot_cost = docker_cost
    }
}
remake_private_factory_tot_cost = {
        set_variable = { private_cost = global.ind_fac_worker }
        if = {
            limit = {
                check_variable = { private_worker_wage = 1 }
            }
            multiply_variable = { private_cost = global.low_wages }
        }
        if = {
            limit = {
                check_variable = { private_worker_wage = 2 }
            }
            multiply_variable = { private_cost = global.low_mid_wages }
        }
        if = {
            limit = {
                check_variable = { private_worker_wage = 3 }
            }
            multiply_variable = { private_cost = global.mid_wages }
        }
        if = {
            limit = {
                check_variable = { private_worker_wage = 4 }
            }
            multiply_variable = { private_cost = global.high_mid_wages }
        }
        if = {
            limit = {
                check_variable = { private_worker_wage = 5 }
            }
            multiply_variable = { private_cost = global.high_wages }
        }
        add_to_variable = { private_cost = global.ind_fac_raw_cost }
        divide_variable = { private_cost = global.one_bil }
        set_variable = { an_private_cost = private_cost }
        multiply_variable = { private_cost = private_goods_factory }
}
remake_this_month_goods = {
    set_variable = {
        private_goods_qwq = 0
    }
    set_variable = {
        this_month_goods = global.an_ind_goods
    }
    divide_variable = {
        this_month_goods = global.one_bil
    }
    multiply_variable = {
        this_month_goods = now_use_national_goods_factory
    }
    if = {
        limit = {
            check_variable = { national_worker_wage = 1 }
        }
        multiply_variable = {
            this_month_goods = global.low_wages_factor
        }
    }
    if = {
        limit = {
            check_variable = { national_worker_wage = 2 }
        }
        multiply_variable = {
            this_month_goods = global.low_mid_wages_factor
        }
    }
    if = {
        limit = {
            check_variable = { national_worker_wage = 3 }
        }
        multiply_variable = {
            this_month_goods = global.mid_wages_factor
        }
    }
    if = {
        limit = {
            check_variable = { national_worker_wage = 4 }
        }
        multiply_variable = {
            this_month_goods = global.high_mid_wages_factor
        }
    }
    if = {
        limit = {
            check_variable = { national_worker_wage = 5 }
        }
        multiply_variable = {
            this_month_goods = global.high_wages_factor
        }
    }
    every_controlled_state = {
        set_variable = {
            mid_w = global.an_ind_goods
        }
        divide_variable = {
            mid_w = global.one_bil
        }
        multiply_variable = {
            mid_w = private_goods_factory
        }
        if = {
            limit = {
                check_variable = { private_worker_wage = 1 }
            }
            multiply_variable = {
                mid_w = global.low_wages_factor
            }
        }
        if = {
            limit = {
                check_variable = { private_worker_wage = 2 }
            }
            multiply_variable = {
                mid_w = global.low_mid_wages_factor
            }
        }
        if = {
            limit = {
                check_variable = { private_worker_wage = 3 }
            }
            multiply_variable = {
                mid_w = global.mid_wages_factor
            }
        }
        if = {
            limit = {
                check_variable = { private_worker_wage = 4 }
            }
            multiply_variable = {
                mid_w = global.high_mid_wages_factor
            }
        }
        if = {
            limit = {
                check_variable = { private_worker_wage = 5 }
            }
            multiply_variable = {
                mid_w = global.high_wages_factor
            }
        }
        add_to_variable = {
            PREV.this_month_goods = mid_w
        }
        add_to_variable = {
            PREV.private_goods_qwq = mid_w
        }
    }
}
remake_fac_nums = {
    set_variable = { ind_num = num_of_civilian_factories }
    set_variable = { mil_num = num_of_military_factories }
    set_variable = { docker_num = num_of_naval_factories }
}
remake_market_from_worker = {
    set_variable = { market_from_pri_fac = 0 }
    every_controlled_state = {
        set_variable = { mid_w = global.ind_fac_worker }
        if = {
            limit = {
                check_variable = { private_worker_wage = 1 }
            }
            multiply_variable = { mid_w = global.low_wages }
        }
        if = {
            limit = {
                check_variable = { private_worker_wage = 2 }
            }
            multiply_variable = { mid_w = global.low_mid_wages }
        }
        if = {
            limit = {
                check_variable = { private_worker_wage = 3 }
            }
            multiply_variable = { mid_w = global.mid_wages }
        }
        if = {
            limit = {
                check_variable = { private_worker_wage = 4 }
            }
            multiply_variable = { mid_w = global.high_mid_wages }
        }
        if = {
            limit = {
                check_variable = { private_worker_wage = 5 }
            }
            multiply_variable = { mid_w = global.high_wages }
        }
        divide_variable = { mid_w = global.one_bil }
        multiply_variable = { mid_w = private_goods_factory }
        add_to_variable = { PREV.market_from_pri_fac = mid_w }
    }

    set_variable = { mid_w = global.ind_fac_worker }
    if = {
        limit = {
            check_variable = { national_worker_wage = 1 }
        }
        multiply_variable = { mid_w = global.low_wages }
    }
    if = {
        limit = {
            check_variable = { national_worker_wage = 2 }
        }
        multiply_variable = { mid_w = global.low_mid_wages }
    }
    if = {
        limit = {
            check_variable = { national_worker_wage = 3 }
        }
        multiply_variable = { mid_w = global.mid_wages }
    }
    if = {
        limit = {
            check_variable = { national_worker_wage = 4 }
        }
        multiply_variable = { mid_w = global.high_mid_wages }
    }
    if = {
        limit = {
            check_variable = { national_worker_wage = 5 }
        }
        multiply_variable = { mid_w = global.high_wages }
    }
    divide_variable = { mid_w = global.one_bil }
    multiply_variable = { mid_w = ind_num }
    set_variable = {  market_from_ind_fac = mid_w }

    set_variable = { mid_w = global.mil_fac_worker }
    if = {
        limit = {
            check_variable = { national_worker_wage = 1 }
        }
        multiply_variable = { mid_w = global.low_wages }
    }
    if = {
        limit = {
            check_variable = { national_worker_wage = 2 }
        }
        multiply_variable = { mid_w = global.low_mid_wages }
    }
    if = {
        limit = {
            check_variable = { national_worker_wage = 3 }
        }
        multiply_variable = { mid_w = global.mid_wages }
    }
    if = {
        limit = {
            check_variable = { national_worker_wage = 4 }
        }
        multiply_variable = { mid_w = global.high_mid_wages }
    }
    if = {
        limit = {
            check_variable = { national_worker_wage = 5 }
        }
        multiply_variable = { mid_w = global.high_wages }
    }
    divide_variable = { mid_w = global.one_bil }
    set_variable = { tot_goods_fac = 0 }
    multiply_variable = { mid_w = mil_num }
    set_variable = { market_from_mil_fac = mid_w }
    set_variable = { mid_w = global.docker_fac_worker }
    if = {
        limit = {
            check_variable = { national_worker_wage = 1 }
        }
        multiply_variable = { mid_w = global.low_wages }
    }
    if = {
        limit = {
            check_variable = { national_worker_wage = 2 }
        }
        multiply_variable = { mid_w = global.low_mid_wages }
    }
    if = {
        limit = {
            check_variable = { national_worker_wage = 3 }
        }
        multiply_variable = { mid_w = global.mid_wages }
    }
    if = {
        limit = {
            check_variable = { national_worker_wage = 4 }
        }
        multiply_variable = { mid_w = global.high_mid_wages }
    }
    if = {
        limit = {
            check_variable = { national_worker_wage = 5 }
        }
        multiply_variable = { mid_w = global.high_wages }
    }
    divide_variable = { mid_w = global.one_bil }
    set_variable = { tot_goods_fac = 0 }
    multiply_variable = { mid_w = docker_num }
    set_variable = { market_from_doc_fac = mid_w }
}
remake_people_market = {
    set_variable = { people_mark_tot = 0 }
    every_controlled_state = {
        set_variable = { capital_upd = state_cash_tot }
        multiply_variable = { capital_upd = 0.01 }
        add_to_variable = { PREV.people_mark_tot = state_cash_tot }
        subtract_from_variable = { PREV.people_mark_tot = capital_upd }
    }
}
remake_market = {
    set_variable = { large_of_market = 0 }
    remake_market_from_worker = yes 
    remake_people_market = yes
    add_to_variable = { large_of_market = market_from_pri_fac }
    add_to_variable = { large_of_market = market_from_ind_fac }
    add_to_variable = { large_of_market = market_from_mil_fac }
    add_to_variable = { large_of_market = market_from_doc_fac }
    add_to_variable = { large_of_market = people_mark_tot }
    set_variable = { tot_large_of_market = large_of_market }
    if = {
        limit = {
            check_variable = { people_tax > 0.75 }
        }
        set_variable = { pay_for_food = 1 }
        subtract_from_variable = { pay_for_food = people_tax }
    }
    else = { set_variable = { pay_for_food = 0.25 } }
    set_variable = { pop_foods_cost = tot_large_of_market }
    multiply_variable = { pop_foods_cost = pay_for_food }
    subtract_from_variable = { large_of_market = pop_foods_cost }

    set_variable = { our_tax_from_people = tot_large_of_market }
    multiply_variable = { our_tax_from_people = people_tax }
    subtract_from_variable = { large_of_market = our_tax_from_people }

    multiply_variable = { large_of_market = 0.5 }

    set_variable = { before_large_of_market = large_of_market }

}
clamp_new_economy_goods_factory = {
    remake_fac_nums = yes
    clamp_variable = {
        var = national_goods_factory
        max = ind_num
    }
    clamp_variable = {
        var = national_goods_factory
        min = 0
    }
}
clamp_worker_wage = {
    clamp_variable = {
        var = national_worker_wage
        max = 5
    }
    clamp_variable = {
        var = national_worker_wage
        min = 1
    }
    remake_fac_nums = yes
    remake_national_factory_tot_cost = yes
    remake_this_month_goods = yes
}
monthly_build_new_economy = {
    set_variable = { new_nat_tre_det = 0 }
    every_controlled_state = {
        remake_private_factory_tot_cost = yes
    }
    set_variable = { minst_test_max_fac_goods = num_of_civilian_factories }
    multiply_variable = { minst_test_max_fac_goods = 0.1 }
    if = { 
        limit = {
            check_variable = { minst_test_max_fac_goods > now_use_national_goods_factory }
            OR = {
                is_ai = yes
                check_variable = { global.autowork = 1 }
            }
        } 
        set_variable = { now_use_national_goods_factory = num_of_civilian_factories }
        multiply_variable = { now_use_national_goods_factory = 0.1 }
        round_variable = now_use_national_goods_factory
    }
    every_controlled_state = {
        set_variable = {
            we_can_pay = private_capital
        }
        add_to_variable = {
            we_can_pay = private_det
        }
        while_loop_effect = {
            break = temp_break
            limit = {
                check_variable = { private_cost < we_can_pay }
                check_variable = { private_worker_wage < 5 }
            }
            add_to_variable = { private_worker_wage = 1 }
            remake_private_factory_tot_cost = yes
        }
        while_loop_effect = {
            break = temp_break
            limit = {
                check_variable = { private_cost > we_can_pay }
                check_variable = { private_worker_wage > 1 }
            }
            add_to_variable = { private_worker_wage = -1 }
            remake_private_factory_tot_cost = yes
        }
    }
    # ai_worker_wage_work = yes
    clamp_worker_wage = yes
    clamp_new_economy_goods_factory = yes
    set_variable = {
        this_month_goods = 0
    }
    remake_fac_nums = yes
    force_update_dynamic_modifier = yes
    remake_national_factory_tot_cost = yes
    remake_this_month_goods = yes
    set_variable = {
        surplus_month_goods = this_month_goods
    }
    remake_market = yes
    set_variable = { cash_upd = tot_large_of_market }
    
    multiply_variable = { cash_upd = 0.5 }
    
    multiply_variable = { new_nat_tre = modifier@new_nat_tre_modifier }
    
}
sell_goods = {
    # our_nation_not_sphere
    every_country = {
        limit = {
            check_variable = { surplus_month_goods > 0 }
            AND = {
                check_variable = { in_a_sphere = 0 }
                is_subject = no
            }
        }
        set_variable = { wanana_sell_goods = surplus_month_goods }
        clamp_variable = {
            var = wanana_sell_goods 
            max = large_of_market
        }
        subtract_from_variable = { large_of_market = wanana_sell_goods }
        subtract_from_variable = { surplus_month_goods = wanana_sell_goods }
    }
    # spheres
    every_country = {
        limit = {
            check_variable = { surplus_month_goods > 0 }
            check_variable = { is_a_gerat_power = 1 }
        }
        every_country = {
            limit = {
                check_variable = { in_a_sphere = 1 }
                check_variable = { sphere_country = PREV }
                check_variable = { large_of_market > 0 }
            }
            set_variable = { PREV.wanana_sell_goods = PREV.surplus_month_goods }
            clamp_variable = {
                var = PREV.wanana_sell_goods 
                max = large_of_market
            }
            subtract_from_variable = { large_of_market = PREV.wanana_sell_goods }
            subtract_from_variable = { PREV.surplus_month_goods = PREV.wanana_sell_goods }
        }
    }
    every_country = {
        limit = {
            check_variable = { surplus_month_goods > 0 }
        }
        every_subject_country = {
            limit = {
                check_variable = { large_of_market > 0 }
            }
            set_variable = { PREV.wanana_sell_goods = PREV.surplus_month_goods }
            clamp_variable = {
                var = PREV.wanana_sell_goods 
                max = large_of_market
            }
            subtract_from_variable = { large_of_market = PREV.wanana_sell_goods }
            subtract_from_variable = { PREV.surplus_month_goods = PREV.wanana_sell_goods }
        }
    }
    # our_nation
    every_country = {
        limit = {
            check_variable = { surplus_month_goods > 0 }
        }
        set_variable = { wanana_sell_goods = surplus_month_goods }
        clamp_variable = {
            var = wanana_sell_goods 
            max = large_of_market
        }
        subtract_from_variable = { large_of_market = wanana_sell_goods }
        subtract_from_variable = { surplus_month_goods = wanana_sell_goods }
    }
    # other_nation
    # every_country = {
    #    limit = {
    #        check_variable = { surplus_month_goods > 0 }
    #    }
    #    every_country = {
    #        limit = {
    #            check_variable = { large_of_market > 0 }
    #        }
    #        set_variable = { PREV.wanana_sell_goods = PREV.surplus_month_goods }
    #        clamp_variable = {
    #            var = PREV.wanana_sell_goods 
    #            max = large_of_market
    #        }
    #        subtract_from_variable = { large_of_market = PREV.wanana_sell_goods }
    #        subtract_from_variable = { PREV.surplus_month_goods = PREV.wanana_sell_goods }
    #    }
    # }
    every_country = {
        set_variable = { real_large_of_market = large_of_market }
    }
}
distribute_profits = {
    set_variable = {
        an_factory_profits = this_month_goods
    }
    subtract_from_variable = {
        an_factory_profits = surplus_month_goods
    }
    set_variable = { mid_w = private_goods_factory_tot }
    add_to_variable = { mid_w = now_use_national_goods_factory }
    divide_variable = {
        an_factory_profits = mid_w
    }
    set_variable = {
        national_factory_tot_profits = an_factory_profits
    }
    multiply_variable = {
        national_factory_tot_profits = now_use_national_goods_factory
    }
    # add_to_variable = { new_nat_tre_det = national_factory_tot_profits }
    set_variable = { our_tax_from_factory = 0 }
    every_controlled_state = {
        set_variable = {
            private_goods_cnts = PREV.an_factory_profits
        }
        multiply_variable = {
            private_goods_cnts = private_goods_factory
        }
        add_to_variable = {
            private_capital = private_goods_cnts
        }
        set_variable = {
            our_tax_from_factory_state = private_goods_cnts
        }
        multiply_variable = {
            our_tax_from_factory_state = PREV.tax_qwq
        }
        subtract_from_variable = {
            private_capital = our_tax_from_factory_state
        }
        set_variable = {
            private_det = private_goods_cnts
        }
        subtract_from_variable = {
            private_det = our_tax_from_factory_state
        }
        add_to_variable = { PREV.our_tax_from_factory = our_tax_from_factory_state }
    }
    # add_to_variable = { new_nat_tre_det = our_tax_from_factory }
}
remake_nat_tre_add = {
    set_variable = { new_nat_tre_add = 0 }
    add_to_variable = { new_nat_tre_add = our_tax_from_factory }
    add_to_variable = { new_nat_tre_add = national_factory_tot_profits }
    add_to_variable = { new_nat_tre_add = our_tax_from_people }
}
remake_mil_spend = {
	set_variable = { military_spend = num_battalions}
	multiply_variable = {var = military_spend value = 0.005}
}
remake_pop_cost = {
    set_variable = { num_of_people = 0 }
    every_controlled_state = {
        add_to_variable = { PREV.num_of_people = state_population_k }
    }
    set_variable = { people_cost = num_of_people }
    divide_variable = { var = people_cost value = 4000 }
    multiply_variable = { people_cost = modifier@people_cost_modifier }
}
remake_nat_tre_del = {
    set_variable = { new_nat_tre_del = 0 }
    add_to_variable = { new_nat_tre_del = national_factory_tot_cost }
    set_variable = { before_national_factory_tot_cost = national_factory_tot_cost }
    add_to_variable = { new_nat_tre_del = military_spend }
    add_to_variable = { new_nat_tre_del = people_cost }
    add_to_variable = { new_nat_tre_del = debt_interest }
}
payroll_qwq = {
    remake_national_factory_tot_cost = yes
    every_controlled_state = {
        remake_private_factory_tot_cost = yes
    }
    remake_mil_spend = yes
    remake_pop_cost = yes
    set_variable = { debt_interest = nat_debt }
    multiply_variable = { debt_interest = 0.01 }
    remake_nat_tre_add = yes
    remake_nat_tre_del = yes
    set_variable = { bef_national_factory_tot_profits = national_factory_tot_profits }
    set_variable = { bef_our_tax_from_factory = our_tax_from_factory }
    set_variable = { bef_our_tax_from_people = our_tax_from_people }
    set_variable = { bef_national_factory_tot_cost = national_factory_tot_cost }
    set_variable = { bef_military_spend = military_spend }
    set_variable = { bef_people_cost = people_cost }
    set_variable = { new_nat_tre_det = new_nat_tre_add }
    subtract_from_variable = { new_nat_tre_det = new_nat_tre_del }
    set_variable = { new_nat_tre_profits_to_factory = new_nat_tre_det }
    
    subtract_from_variable = {  new_nat_tre_profits_to_factory = our_tax_from_people }
    add_to_variable = { new_nat_tre_profits_to_factory = national_factory_tot_cost }

    set_variable = { mid_w = tot_large_of_market }
    multiply_variable = { mid_w = 0.45 }
    add_to_variable = { new_nat_tre_profits_to_factory = mid_w }
    every_controlled_state = {
        add_to_variable = { private_capital = capital_upd }
        subtract_from_variable = { private_capital = private_cost }
    }
    
}
industrial_expansion = {
    set_variable = {
        now_a_new_ind_cost = an_private_cost
    }
    add_to_variable = {
        now_a_new_ind_cost = global.a_new_ind_cost
    }
    set_variable = {
        mid_w = 0
    }
    while_loop_effect = {
        break = temp_break
        limit = {
            check_variable = { private_capital > now_a_new_ind_cost }
        }
        add_to_variable = { private_goods_factory = 1 }
        subtract_from_variable = { private_capital = now_a_new_ind_cost }
        add_to_variable = { mid_w = an_private_cost }
    }
    add_to_variable = {
        private_capital = mid_w
    }
    #sell factory
    while_loop_effect = {
        break = temp_break
        limit = {
            check_variable = { private_capital < 0 }
            check_variable = { private_goods_factory > 0 }
        }
        add_to_variable = { private_goods_factory = -1 }
        add_to_variable = { private_capital = global.sell_a_ind }
    }
    while_loop_effect = {
        break = temp_break
        limit = {
            check_variable = { private_worker_wage < 2 }
        }
        add_to_variable = { private_worker_wage = 1 }
        remake_private_factory_tot_cost = yes
        while_loop_effect = {
            break = temp_break_1
            limit = {
                check_variable = { private_cost > private_capital }
                check_variable = { private_goods_factory > 0 }
            }
            add_to_variable = { private_goods_factory = -1 }
            add_to_variable = { private_capital = global.sell_a_ind }
            remake_private_factory_tot_cost = yes
        }
    }
    #bankruptcy!
    if = {
        limit = {
            check_variable = { private_capital < 0 }
            check_variable = { private_goods_factory = 0 }
        }
        set_variable = {
            private_capital = 0
        }
    }
}
ai_worker_wage_work = {
    if = {
        limit = {
            OR = {
                is_ai = yes
                check_variable = { global.autowork = 1 }
            }
        }
        remake_national_factory_tot_cost = yes
        while_loop_effect = {
            break = temp_break
            limit = {
                check_variable = { national_factory_tot_cost < new_nat_tre_profits_to_factory }
                check_variable = { national_worker_wage < 5 }
            }
            add_to_variable = { national_worker_wage = 1 }
            remake_national_factory_tot_cost = yes
        }
        while_loop_effect = {
            break = temp_break
            limit = {
                check_variable = { national_factory_tot_cost > new_nat_tre_profits_to_factory }
                check_variable = { national_worker_wage > 1 }
            }
            add_to_variable = { national_worker_wage = -1 }
            remake_national_factory_tot_cost = yes
        }
    }
}
ai_goods_factory_work = {
    if = {
        limit = {
            OR = {
                is_ai = yes
                check_variable = { global.autowork = 1 }
            }
        }
        set_variable = { now_goods_test = national_goods_factory }
        add_to_variable = { now_goods_test = private_goods_factory_tot }
        set_variable = { rel_an_ind_goods = global.an_ind_goods }
        divide_variable = { rel_an_ind_goods = global.one_bil }
        multiply_variable = { now_goods_test = rel_an_ind_goods }
        set_variable = { test_max_fac_goods = num_of_civilian_factories }
        multiply_variable = { test_max_fac_goods = 0.8 }
        set_variable = { minst_test_max_fac_goods = num_of_civilian_factories }
        multiply_variable = { minst_test_max_fac_goods = 0.1 }
        while_loop_effect = {
            break = temp_break
            limit = {
                OR = {
                    check_variable = { now_goods_test < before_large_of_market }
                    check_variable = { national_goods_factory < minst_test_max_fac_goods }
                }
                check_variable = { national_goods_factory < test_max_fac_goods }
            }
            add_to_variable = { national_goods_factory = 1 }
            add_to_variable = { now_goods_test = rel_an_ind_goods }
        }
        while_loop_effect = {
            break = temp_break
            limit = {
                OR = {
                    check_variable = { now_goods_test > before_large_of_market }
                    check_variable = { national_goods_factory > test_max_fac_goods }
                }
                check_variable = { national_goods_factory > minst_test_max_fac_goods }
            }
            add_to_variable = { national_goods_factory = -1 }
            subtract_from_variable = { now_goods_test = rel_an_ind_goods }
        }
    }
}
ai_tax_work = {
    if = {
        limit = {
            OR = {
                is_ai = yes
                check_variable = { global.autowork = 1 }
            }
        }
        remake_market = yes
        remake_national_factory_tot_cost = yes
        every_controlled_state = {
            remake_private_factory_tot_cost = yes
        }
        remake_mil_spend = yes
        remake_pop_cost = yes
        remake_nat_tre_add = yes
        remake_nat_tre_del = yes
        while_loop_effect = {
            break = temp_break
            limit = {
                check_variable = { people_tax < 1 }
                check_variable = { new_nat_tre_add < new_nat_tre_del }
            }
            add_to_variable = { people_tax = 0.02 }
            add_to_variable = { people_tax_qaq = 2 }
            remake_market = yes
            remake_national_factory_tot_cost = yes
            every_controlled_state = {
                remake_private_factory_tot_cost = yes
            }
            remake_mil_spend = yes
            remake_pop_cost = yes
            remake_nat_tre_add = yes
            remake_nat_tre_del = yes
        }
        while_loop_effect = {
            break = temp_break
            limit = {
                check_variable = { people_tax > 0 }
                check_variable = { new_nat_tre_add > new_nat_tre_del }
            }
            add_to_variable = { people_tax = -0.02 }
            add_to_variable = { people_tax_qaq = -2 }
            remake_market = yes
            remake_national_factory_tot_cost = yes
            every_controlled_state = {
                remake_private_factory_tot_cost = yes
            }
            remake_mil_spend = yes
            remake_pop_cost = yes
            remake_nat_tre_add = yes
            remake_nat_tre_del = yes
        }
    }
}
ai_debt_work = {
    if = {
        limit = {
            OR = {
                is_ai = yes
                check_variable = { global.autowork = 1 }
            }
        }
        while_loop_effect = {
            break = temp_break
            limit = {
                check_variable = { nat_debt_qwq > 10 }
                check_variable = { new_nat_tre > 1 }
            }
            subtract_from_variable = { new_nat_tre = 1 }
            subtract_from_variable = { nat_debt = 1 }
            set_variable = { nat_debt_qwq = nat_debt }
            divide_variable = { nat_debt_qwq = gdpmn }
            multiply_variable = { nat_debt_qwq = 100 }
        }
    }
}
ai_inflation_work = {
    if = {
        limit = {
            OR = {
                is_ai = yes
                check_variable = { global.autowork = 1 }
            }
        }
        set_variable = { my_cash_add = gdpmn }
        multiply_variable = { my_cash_add = 0.05 }
        while_loop_effect = {
            break = temp_break
            limit = {
                check_variable = { gdp_inflation < 0 }
            }
            add_to_variable = { gdp_inflation = 5 }
            add_to_variable = { new_nat_tre = my_cash_add }
        }
    }
}
monthly_we_do = {
    set_variable = { global.total_gdp = 0 }
    every_country = {
        monthly_build_new_economy = yes
    }
    every_country = {
        set_variable = {
            shpere_market = 0
        }
    }
    every_country = {
        if = {
            limit = {
                check_variable = { in_a_sphere = 1 }
            }
            var:sphere_country = {
                add_to_variable = { shpere_market = PREV.before_large_of_market }
            }
        }
    }
    sell_goods = yes
    every_country = {
        set_variable = { cash_upd_qwq = before_large_of_market }
        subtract_from_variable = { cash_upd_qwq = large_of_market }
        divide_variable = { cash_upd_qwq = cash_upd }
        multiply_variable = { cash_upd_qwq = 0.05 }
        add_to_variable = { cash_upd_qwq = 1 }
        every_controlled_state = {
            multiply_variable = { state_cash_tot = PREV.cash_upd_qwq }
        }
    }
    every_country = {
        distribute_profits = yes
        payroll_qwq = yes

        set_variable = { tax_stab_fac = 0 }
        if = {
            limit = {
                people_tax > 0.4
            }
            set_variable = { tax_stab_fac = 0.4 }
            subtract_from_variable = { tax_stab_fac = people_tax }
        }
        remake_wage_factor = yes
        if = {
            limit = { check_variable = { new_nat_tre_det > 0 } }
            add_to_variable = { new_nat_tre = new_nat_tre_det }
        }
        else = {
            subtract_from_variable = { nat_debt = new_nat_tre_det }
        }
        set_variable = { bef_gdpmn = gdpmn }
        set_variable = { gdpmn = 0 }
        add_to_variable = { gdpmn = tot_large_of_market }
        # add_to_variable = { gdpmn = this_month_goods }
        # subtract_from_variable = { gdpmn = surplus_month_goods }

        add_to_variable = { global.total_gdp = gdpmn }

        set_variable = { gdp_growth = gdpmn }
        divide_variable = { gdp_growth = bef_gdpmn }
        multiply_variable = { gdp_growth = 100 }
        subtract_from_variable = { gdp_growth = 100 }

        

        add_to_variable = { gdp_inflation = 1 }
        subtract_from_variable = { gdp_inflation = gdp_growth }

        
        multiply_variable = { gdp_inflation = modifier@gdp_inflation_modifier }

        multiply_variable = { gdp_growth = modifier@gdp_growth_modifier }
        ai_inflation_work = yes
        ai_debt_work = yes
        set_variable = { nat_debt_qwq = nat_debt }
        divide_variable = { nat_debt_qwq = gdpmn }
        multiply_variable = { nat_debt_qwq = 100 }
        set_variable = { core_population = 0 }
        every_controlled_state = {
			if = {
				limit = {
					is_core_of = PREV
				}
				add_to_variable = { var = PREV.core_population value = state_population_k } 
			}
		}


        ai_tax_work = yes
        every_controlled_state = {
            industrial_expansion = yes
        }
        ai_goods_factory_work = yes
        ai_worker_wage_work = yes

        set_variable = { now_use_national_goods_factory = national_goods_factory }
        remake_this_month_goods = yes
        force_update_dynamic_modifier = yes
    }
    every_country = {
        set_variable = { private_capital_tot = 0 }
        set_variable = { private_goods_factory_tot = 0 }
        every_controlled_state = {
            add_to_variable = { PREV.private_capital_tot = private_capital }
            add_to_variable = { PREV.private_goods_factory_tot = private_goods_factory }
        }

        set_variable ={ gdp_per_capita = gdpmn }
        multiply_variable = { var = gdp_per_capita value = 1000 }
        if = {
            limit = {
                check_variable = { max_manpower_k = 0 }					
            }
            set_variable ={ gdp_per_capita = 0 }
        }
        else = {
            divide_variable = { var = gdp_per_capita value = max_manpower_k }
            multiply_variable = { var = gdp_per_capita value = 1000 }				
        }
        set_variable ={ gdp_per_capita_core = gdpmn }
        multiply_variable = { var = gdp_per_capita_core value = 1000 }
        if = {
            limit = {
                check_variable = { core_population = 0 }					
            }
            set_variable ={ gdp_per_capita_core = 0 }
        }
        else = {
            divide_variable = { var = gdp_per_capita_core value = core_population }
            multiply_variable = { var = gdp_per_capita_core value = 1000 }			
        }
        
        set_variable = { gdp_proportion = gdpmn }
                    
        multiply_variable = { gdp_proportion = 100 }
                    
        divide_variable = { var = gdp_proportion value = global.total_gdp }

        set_variable = { current_int = people_tax_qaq }
        divide_variable = { current_int = 2 }
        round_variable = current_int
    }
}
build_base_test = {
    if = {
        limit = {
            check_variable = { people_tax > 0.99 }
        }
        every_controlled_state = {
            multiply_variable = { state_cash_tot = 1.4 }
        }
    }
    if = {
        limit = {
            check_variable = { people_tax > 0.85 }
        }
        every_controlled_state = {
            multiply_variable = { state_cash_tot = 1.3 }
        }
    }
    if = {
        limit = {
            check_variable = { people_tax > 0.7 }
        }
        every_controlled_state = {
            multiply_variable = { state_cash_tot = 1.2 }
        }
    }
}

NEW_Literacy_rate = {
	set_variable = { new_Literacy_rate = max_manpower_k }
    set_variable = {
        total_University = total_constructed_University
    }
    multiply_variable = {
        total_University = 0.01
    }
	divide_variable = {
        new_Literacy_rate = total_University
    }
    divide_variable = {
        new_Literacy_rate = num_of_factories
    }
}

Jobless_rate = {

	set_variable = { Jobless_rate_value = max_manpower_k }
	divide_variable = {
        Jobless_rate_value = num_of_factories
    }
    set_variable = { working_population = Jobless_rate_value }
    multiply_variable = {
       Jobless_rate_value = 0.01
    }
    
    if={
        limit={
            AND={
                num_of_factories < 20
                has_manpower > 1000
            }
        }
        divide_variable = {
            Jobless_rate_value = 10
        }
        divide_variable = {
            working_population = 10
        }
    }
    add_to_variable = { Jobless_rate_value = modifier@Jobless_rate_stab_modifier}
    subtract_from_variable = { working_population = Jobless_rate_value}
    
    set_variable = { Jobless_rate_stab_value = 0 }
    subtract_from_variable = { Jobless_rate_stab_value = Jobless_rate_value }
    multiply_variable = {
        Jobless_rate_stab_value = 0.01
    }
    



    set_variable = { Jobless_rate_stab_value_0_02 = Jobless_rate_stab_value }
    
    multiply_variable = {
        Jobless_rate_stab_value_0_02 = 0.02
    }



    set_variable = { Jobless_rate_stab_tool = Jobless_rate_stab_value_0_02 }
    
    divide_variable = {
        Jobless_rate_stab_tool = 0.01
    }
    set_variable = { Jobless_rate_tool = Jobless_rate_stab_value }
    divide_variable = {
        Jobless_rate_tool = 0.03
    }
    
}